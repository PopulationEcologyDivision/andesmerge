% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/integrityCheck.R
\name{integrityCheck}
\alias{integrityCheck}
\title{integrityCheck}
\usage{
integrityCheck(
  cxnObj = NULL,
  mission = NULL,
  type1Only = FALSE,
  debug = FALSE,
  addErrors = FALSE
)
}
\arguments{
\item{cxnObj}{default is \code{NULL}.  This is a connection object from 
\code{Mar.utils::make_oracle_cxn()}.}

\item{mission}{default is \code{NULL}.  This is a vector of one or more mission identifiers 
(e.g "CAR2021240") that will be used to limit the extractions to particular mission(s). 
\code{"ALL"} is also valid, and will return all records for all of the specified tables. 
Use with caution.}

\item{type1Only}{default is \code{FALSE}. The presence of failed tows can result in a cascade of 
'missing' records in other tables. Setting this to \code{TRUE} will output which sets are not 
type 1, but will then drop them from all other tables.}

\item{debug}{default is \code{FALSE}.  When TRUE, this captures the ESE output locally, allowing 
multiple runs without having to re-extract the data}

\item{addErrors}{default is \code{TRUE}.  When \code{TRUE}, this modifies some SETNO, SPEC and 
SIZE_CLASS to review how such changes will be handles by the function.  It will only work if 
\code{debug = T}}
}
\value{
nothing - just outputs messages
}
\description{
This function verifies that key fields within one ESE table exist in the other 
tables in the ESE.  For example, if a SETNO exists in ESE_CATCHES that does not exist in ESE_SETS,
a message would be output.
}
\author{
Mike McMahon, \email{Mike.McMahon@dfo-mpo.gc.ca}
}
\concept{qc}
