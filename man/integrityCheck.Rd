% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/integrityCheck.R
\name{integrityCheck}
\alias{integrityCheck}
\title{integrityCheck}
\usage{
integrityCheck(
  eseList = NULL,
  type1Only = FALSE,
  debug = FALSE,
  addErrors = FALSE,
  quiet = FALSE
)
}
\arguments{
\item{eseList}{default is \code{NULL}. This is the output object from either \code{eseExtractor()}
or \code{matchAndesToESE}.}

\item{type1Only}{default is \code{FALSE}. The presence of failed tows can result in a cascade of 
'missing' records in other tables. Setting this to \code{TRUE} will output which sets are not 
type 1, but will then drop them from all other tables.}

\item{debug}{default is \code{FALSE}.  When TRUE, this captures the ESE output locally, allowing 
multiple runs without having to re-extract the data}

\item{addErrors}{default is \code{TRUE}.  When \code{TRUE}, this modifies some SETNO, SPEC and 
SIZE_CLASS to review how such changes will be handles by the function.  It will only work if 
\code{debug = T}}

\item{quiet}{default is \code{FALSE} Determines whether or not the script should output 
informational messages}
}
\value{
a list with an entry for each ESE table (i.e. the 'Parents'.  Each element then contains 
a dataframe containing the records for each 'child' table against which it was compared.  If all 
records could be linked, the entry for the child records will be NA. If the child table was not 
compared to the parent, then the entry will be 'skipped'.
}
\description{
This function verifies that key fields within one ESE table exist in the other 
tables in the ESE.  For example, if a SETNO exists in ESE_CATCHES that does not exist in ESE_SETS,
a message would be output.
}
\author{
Mike McMahon, \email{Mike.McMahon@dfo-mpo.gc.ca}
}
\concept{qc}
